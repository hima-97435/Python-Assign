# Author name-->Himanshu Pokhriyal
# Python Version-->3
# Date-->4 March, 2024

# HAckerRAnk Problem:

# Question-1) https://www.hackerrank.com/challenges/validate-list-of-email-address-with-filter/problem?isFullScreen=true

# You are given an integer  followed by  email addresses. Your task is to print a list containing only valid email addresses in lexicographical order.


# Valid email addresses must follow these rules:

# It must have the username@websitename.extension format type.
# The username can only contain letters, digits, dashes and underscores .
# The website name can only have letters and digits .
# The extension can only contain letters .
# The maximum length of the extension is .

# Concept

# A filter takes a function returning True or False and applies it to a sequence, returning a list of only those members of the sequence where the function returned True. A Lambda function can be used with filters.

# Let's say you have to make a list of the squares of integers from  to  (both included).

# >> l = list(range(10))
# >> l = list(map(lambda x:x*x, l))
# Now, you only require those elements that are greater than  but less than .

# >> l = list(filter(lambda x: x > 10 and x < 80, l))
# Easy, isn't it?

# Example

# Complete the function fun in the editor below.

# fun has the following paramters:

# string s: the string to test
# Returns

# boolean: whether the string is a valid email or not

# # Solution:
# def fun(email):
#     try:
#         username, url = email.split('@')
#         website, extension = url.split('.')
#     except ValueError:
#         return False
#     if username.replace('-', '').replace('_', '').isalnum() is False:
#         return False
#     elif website.isalnum() is False:
#         return False
#     elif len(extension) > 3:
#         return False
#     else:
#         return True
        
        
#     # return True if s is a valid email, else return False

# def filter_mail(emails):
#     return list(filter(fun, emails))

# if __name__ == '__main__':
#     n = int(input())
#     emails = []
#     for _ in range(n):
#         emails.append(input())

# filtered_emails = filter_mail(emails)
# filtered_emails.sort()
# print(filtered_emails)

    # After this Question
    # Rank-->37219
    # 5 Star Coder --> {1295};(76/115)

# Question-2) https://www.hackerrank.com/challenges/re-group-groups/problem?isFullScreen=true

# Task

# You are given a string .
# Your task is to find the first occurrence of an alphanumeric character in  (read from left to right) that has consecutive repetitions.

# Input Format

# A single line of input containing the string .

# Constraints


# Output Format

# Print the first occurrence of the repeating character. If there are no repeating characters, print -1.

# Solution:
# Enter your code here. Read input from STDIN. Print output to STDOUT
# import re

# m=re.findall(r"([A-Za-z0-9])\1+",input())
# if m:
#     print(m[0])
# else:
#     print(-1)

    # After this Question
    # Rank-->36367
    # 5 Star Coder --> {1315};(77/115)
