# Author name-->Himanshu POkhriyal
# Python Version->3
# Date->3 MArch 2024

# HAckerRAnk Problem:

# # Question-1) https://www.hackerrank.com/challenges/any-or-all/problem?isFullScreen=true

# Task

# You are given a space separated list of integers. If all the integers are positive, then you need to check if any integer is a palindromic integer.

# Input Format

# The first line contains an integer .  is the total number of integers in the list.
# The second line contains the space separated list of  integers.

# Constraints


# Output Format

# Print True if all the conditions of the problem statement are satisfied. Otherwise, print False.

# Sample Input

# 5
# 12 9 61 5 14 
# Sample Output

# True

# Explanation

# Condition 1: All the integers in the list are positive.
# Condition 2: 5 is a palindromic integer.

# Hence, the output is True.

# Can you solve this challenge in 3 lines of code or less?
# There is no penalty for solutions that are correct but have more than 3 lines.

# Solution:
# Enter your code here. Read input from STDIN. Print output to STDOUT
# def palindromic(n):
#     nlist=list(str(n))
#     return str.join('',nlist) == str.join('',reversed(nlist))
    

# input()

# numbers=list(map(int, input().split()))

# is_palindromic=[palindromic(x) for x in numbers]
# is_positive=[x>=0 for x in numbers]

# print(all(is_positive) and any(is_palindromic))

    # After this Question
    # Rank-->42837
    # 5 Star Coder --> {1175};(71/115)

# Question-2) https://www.hackerrank.com/challenges/ginorts/problem?isFullScreen=true

# You are given a string .
#  contains alphanumeric characters only.
#  Your task is to sort the string  in the following manner:

# All sorted lowercase letters are ahead of uppercase letters.
# All sorted uppercase letters are ahead of digits.
# All sorted odd digits are ahead of sorted even digits.
# Input Format

# A single line of input contains the string .

# Constraints

# Output Format

# Output the sorted string .

# Sample Input

# Sorting1234
# Sample Output

# ginortS1324
# Solution:
# Enter your code here. Read input from STDIN. Print output to STDOUT
# s=input()

# upper,lower,even,odd=[],[],[],[]

# for char in s:
#     if char.isnumeric():
#         if int(char)%2 == 0:
#            even.append(char);
#         else:
#             odd.append(char)
#     else:
#         if char.isupper():
#             upper.append(char)
#         else:
#             lower.append(char)

# print(''.join(sorted(lower))+''.join(sorted(upper))+''.join(sorted(odd))+''.join(sorted(even))) 

# Congrats Himanshu! You just solved all the Built-Ins challenges in Python!

    # After this Question
    # Rank-->40808
    # 5 Star Coder --> {1215};(72/115)

# Question-3) https://www.hackerrank.com/challenges/introduction-to-regex/problem?isFullScreen=true
# Input Format

# The first line contains an integer , the number of test cases.
# The next  line(s) contains a string .

# Constraints

# Output Format

# Output True or False for each test case.

# Solution:
# Enter your code here. Read input from STDIN. Print output to STDOUT'
# from re import match,compile

# pattern=compile('^[-+]?[0-9]*\.[0-9]+$')

# for _ in range(int(input())):
#     print(bool(pattern.match(input())))

    # After this Question
    # Rank-->39856
    # 5 Star Coder --> {1235};(73/115)

# Question-4)   https://www.hackerrank.com/challenges/map-and-lambda-expression/problem?isFullScreen=true

# Lambda functions cannot use the return statement and can only have a single expression. Unlike def, which creates a function and assigns it a name, lambda creates a function and returns the function itself. Lambda can be used inside lists and dictionaries.

# Input Format

# One line of input: an integer .

# Constraints


# Output Format

# A list on a single line containing the cubes of the first  fibonacci numbers.

# # Solution:
# cube = lambda x:x**3 # complete the lambda function 

# def fibonacci(n):
#     storage=[0,1]
#     for i in range(2,n):
#         storage.append(storage[i-1]+storage[i-2])
#     return storage[0:n]
    
#     # return a list of fibonacci numbers

# if __name__ == '__main__':
#     n = int(input())
#     print(list(map(cube, fibonacci(n))))

    # After this Question
    # Rank-->38990
    # 5 Star Coder --> {1255};(74/115)

# Question-5) https://www.hackerrank.com/challenges/re-split/problem?isFullScreen=true

# Check Tutorial tab to know how to to solve.

# You are given a string  consisting only of digits 0-9, commas ,, and dots .

# Your task is to complete the regex_pattern defined below, which will be used to re.split() all of the , and . symbols in .

# Itâ€™s guaranteed that every comma and every dot in  is preceeded and followed by a digit.
# # Solution:
# regex_pattern = r'[.,]+'	# Do not delete 'r'.

# import re
# print("\n".join(re.split(regex_pattern, input())))

    # After this Question
    # Rank-->38090
    # 5 Star Coder --> {1275};(75/115)
