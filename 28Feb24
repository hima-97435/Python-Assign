# Author Name->Himanshu Pokhriyal
# Python Version->3.12.1
# Date->28 Febrary 2024

# HAckerRAnk Problem:

# Question-1) https://www.hackerrank.com/challenges/class-1-dealing-with-complex-numbers/problem?isFullScreen=true

# For this challenge, you are given two complex numbers, and you have to print the result of their addition, subtraction, multiplication, division and modulus operations.
# The real and imaginary precision part should be correct up to two decimal places.
# Input Format
# One line of input: The real and imaginary part of a number separated by a space.
# Output Format
# For two complex numbers  and , the output should be in the following sequence on separate lines:
# For complex numbers with non-zero real and complex part, the output should be in the following format:
# Replace the plus symbol  with a minus symbol  when .
# For complex numbers with a zero complex part i.e. real numbers, the output should be:
# For complex numbers where the real part is zero and the complex part is non-zero, the output should be:

# Solution:
# import math

# class Complex(object):
#     def __init__(self, real, imaginary):
#         self.real = real
#         self.imaginary = imaginary
        
#     def __add__(self, no):
#         return Complex((self.real+no.real), self.imaginary+no.imaginary)
        
#     def __sub__(self, no):
#         return Complex((self.real-no.real), (self.imaginary-no.imaginary))
        
#     def __mul__(self, no):
#         r = (self.real*no.real)-(self.imaginary*no.imaginary)
#         i = (self.real*no.imaginary+no.real*self.imaginary)
#         return Complex(r, i)

#     def __truediv__(self, no):
#         conjugate = Complex(no.real, (-no.imaginary))
#         num = self*conjugate
#         denom = no*conjugate
#         try:
#             return Complex((num.real/denom.real), (num.imaginary/denom.real))
#         except Exception as e:
#             print(e)
        

#     def mod(self):
#         m = math.sqrt(self.real**2+self.imaginary**2)
#         return Complex(m, 0)
        

#     def __str__(self):
#         if self.imaginary == 0:
#             result = "%.2f+0.00i" % (self.real)
#         elif self.real == 0:
#             if self.imaginary >= 0:
#                 result = "0.00+%.2fi" % (self.imaginary)
#             else:
#                 result = "0.00-%.2fi" % (abs(self.imaginary))
#         elif self.imaginary > 0:
#             result = "%.2f+%.2fi" % (self.real, self.imaginary)
#         else:
#             result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))
#         return result

# if __name__ == '__main__':
#     c = map(float, input().split())
#     d = map(float, input().split())
#     x = Complex(*c)
#     y = Complex(*d)
#     print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\n')

    # After this Question
    # Rank-->50025
    # 5 Star Coder --> {1055};(65/115)

# Question-2) https://www.hackerrank.com/challenges/class-2-find-the-torsional-angle/problem?isFullScreen=true

# You are given four points  and  in a 3-dimensional Cartesian coordinate system. You are required to print the angle between the plane made by the points  and  in degrees(not radians). Let the angle be .

#  where  x  and  x .

# Here,  means the dot product of  and , and  x  means the cross product of vectors  and . Also, .

# Input Format

# One line of input containing the space separated floating number values of the  and  coordinates of a point.

# Output Format

# Output the angle correct up to two decimal places.
# Solution:
# import math
# class Points(object):
#     def __init__(self, x, y, z):
#         self.x = x
#         self.y = y
#         self.z = z
        
#     def __sub__(self, no):
#         return  Points((self.x-no.x), (self.y-no.y), (self.z-no.z))
        
#     def dot(self, no):
#         return (self.x*no.x)+(self.y*no.y)+(self.z*no.z)
        
#     def cross(self, no):
#         return Points((self.y*no.z-self.z*no.y), (self.z*no.x-self.x*no.z), (self.x*no.y-self.y*no.x))
                
#     def absolute(self):
#         return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)

# if __name__ == '__main__':
#     points = list()
#     for i in range(4):
#         a = list(map(float, input().split()))
#         points.append(a)

#     a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])
#     x = (b - a).cross(c - b)
#     y = (c - b).cross(d - c)
#     angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))

#     print("%.2f" % math.degrees(angle))
    # After this Question
    # Rank-->48715
    # 5 Star Coder --> {1075};(66/115)

# Congrats Himanshu! You just solved all the Classes challenges in Python!
